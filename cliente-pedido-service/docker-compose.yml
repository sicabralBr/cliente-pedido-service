version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: quarkus
      POSTGRES_PASSWORD: quarkus
      POSTGRES_DB: pedidos
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.7.1-python3.11
    container_name: airflow-web
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: 'defaultfernetkey1234567890=='
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://quarkus:quarkus@postgres:5432/pedidos
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/dados:/opt/airflow/dados
      - ./airflow/entrypoint.sh:/entrypoint.sh
      - ./airflow/requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "8089:8080"
    entrypoint: [ "/bin/bash", "-c", "pip install -r /opt/airflow/requirements.txt && bash /entrypoint.sh" ]

    depends_on:
      - kafka
      - postgres

  airflow-scheduler:
    image: apache/airflow:2.7.1-python3.11
    container_name: airflow-scheduler
    depends_on:
      - postgres
    restart: always
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: 'defaultfernetkey1234567890=='
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://quarkus:quarkus@postgres:5432/pedidos
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/dados:/opt/airflow/dados
      - ./airflow/entrypoint.sh:/entrypoint.sh
      - ./airflow/requirements.txt:/opt/airflow/requirements.txt
    entrypoint: [ "/bin/bash", "-c", "pip install -r /opt/airflow/requirements.txt && airflow scheduler" ]

  cliente-pedido-service:
    build:
      context: ./cliente-pedido
      dockerfile: ../Dockerfile.jvm
    container_name: cliente-pedido-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/pedidos
      QUARKUS_DATASOURCE_USERNAME: quarkus
      QUARKUS_DATASOURCE_PASSWORD: quarkus
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  logistica-service:
    build:
      context: ./logistica
      dockerfile: ../Dockerfile.jvm
    container_name: logistica-service
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - cliente-pedido-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      PEDIDO_SERVICE_URL: http://cliente-pedido-service:8080

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  pgdata:

networks:
  default:
    name: kafka-net
